{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "pagoPA checkout-EC API",
    "contact": {
      "name": "pagoPA checkout team",
      "url": "https://portal.uat.platform.pagopa.it"
    },
    "description": "Documentation of the pagoPA checkout API here.\n"
  },
  "host": "api.platform.pagopa.it",
  "basePath": "/checkout/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/carts": {
      "post": {
        "operationId": "PostCarts",
        "description": "create a cart",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CartRequest"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect",
            "headers": {
              "location": {
                "description": "CheckOut Url",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ProblemJson"
            },
            "examples": {
              "application/json": {
                "type": "https://checkout.pagopa.it/problems/bad-request",
                "title": "Bad Request",
                "status": 400,
                "detail": "missing fiscalCode"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProblemJson"
            },
            "examples": {
              "application/json": {
                "type": "https://checkout.pagopa.it/problems/psp-violation",
                "title": "PSP Service Error",
                "status": 422,
                "detail": "No PSP Service is available"
              }
            }
          },
          "500": {
            "description": "generic error",
            "schema": {
              "$ref": "#/definitions/ProblemJson"
            },
            "examples": {
              "application/json": {
                "type": "https://checkout.pagopa.it/problems/constraint-violation",
                "title": "Service Error",
                "status": 500,
                "detail": "Generic Error"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ProblemJson": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "format": "uri",
          "description": "An absolute URI that identifies the problem type. When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).",
          "default": "about:blank",
          "example": "https://checkout.pagopa.it/problems/constraint-violation"
        },
        "title": {
          "type": "string",
          "description": "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable"
        },
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "The HTTP status code generated by the origin server for this occurrence\nof the problem.",
          "minimum": 100,
          "maximum": 600,
          "exclusiveMaximum": true,
          "example": 400
        },
        "detail": {
          "type": "string",
          "description": "A human readable explanation specific to this occurrence of the\nproblem.",
          "example": "There was an error processing the request"
        },
        "instance": {
          "type": "string",
          "format": "uri",
          "description": "An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced."
        }
      }
    },
    "CartRequest": {
      "type": "object",
      "required": [
        "paymentNotices",
        "returnurls"
      ],
      "properties": {
        "emailNotice": {
          "type": "string",
          "format": "email",
          "example": "my_email@mail.it"
        },
        "paymentNotices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentNotice"
          },
          "minItems": 1,
          "maxItems": 5,
          "example": [
            {
              "noticeNumber": "302012387654312384",
              "fiscalCode": "7777777777"
            },
            {
              "noticeNumber": "302012387654312385",
              "fiscalCode": "7777777777"
            }
          ]
        },
        "returnurls": {
          "type": "object",
          "required": [
            "returnOkUrl",
            "returnCancelUrl",
            "retunErrorOk"
          ],
          "properties": {
            "returnOkUrl": {
              "type": "string",
              "format": "uri",
              "example": "www.comune.di.prova.it/pagopa/success.html"
            },
            "returnCancelUrl": {
              "type": "string",
              "format": "uri",
              "example": "www.comune.di.prova.it/pagopa/cancel.html"
            },
            "retunErrorOk": {
              "type": "string",
              "format": "uri",
              "example": "www.comune.di.prova.it/pagopa/error.html"
            }
          }
        }
      }
    },
    "PaymentNotice": {
      "type": "object",
      "properties": {
        "noticeNumber": {
          "type": "string",
          "minLength": 18,
          "maxLength": 18
        },
        "fiscalCode": {
          "type": "string",
          "minLength": 11,
          "maxLength": 11
        },
        "amount": {
          "type": "integer",
          "minimum": 1
        },
        "companyName": {
          "type": "string",
          "maxLength": 140
        },
        "description": {
          "type": "string",
          "maxLength": 140
        }
      }
    },
    "CartResponse": {
      "type": "object",
      "properties": {
        "idCart": {
          "type": "string",
          "format": "uuid",
          "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        },
        "checkoutUrl": {
          "type": "string",
          "format": "uri",
          "example": "https://checkout.pagopa.it/3fa85f64-5717-4562-b3fc-2c963f66afa6"
        }
      }
    }
  }
}